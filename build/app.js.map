{"version":3,"sources":["../server/app.js"],"names":["db","expressWinston","require","winston","corsOptions","origin","optionsSuccessStatus","connect","app","use","json","errorLogger","transports","Console","colorize","post","req","res","updateItemRate","body","department","rating","then","send","data","toString","addItemComment","count","text","console","log","get","listItems","name","listen","process","env","PORT"],"mappings":";;AAmBA;;;;AACA;;;;AACA;;IAAYA,E;;AACZ;;AACA;;;;AACA;;AASA;;;;;;;;AAjCA;;;;;;;;;;;;;;;;;;AAyBA,IAAMC,iBAAiBC,QAAQ,mBAAR,CAAvB;AACA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB,C,CAAoC;;AAEpC,IAAME,cAAc;AAClBC,UAAQ,GADU;AAElBC,wBAAsB,GAFJ,CAES;AAFT,CAApB;;AAOA;AACAN,GAAGO,OAAH;AACA,2BAAYP,EAAZ;;AAGA;AACA,IAAMQ,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAF,IAAIC,GAAJ,CAAQ,oBAAKL,WAAL,CAAR;AACAI,IAAIC,GAAJ,CAAQR,eAAeU,WAAf,CAA2B;AAC/BC,cAAY,CACR,IAAIT,QAAQS,UAAR,CAAmBC,OAAvB,CAA+B;AAC3BH,UAAM,IADqB;AAE3BI,cAAU;AAFiB,GAA/B,CADQ;AADmB,CAA3B,CAAR;;AAUAN,IAAIO,IAAJ,CAAS,aAAT,EAAwB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpCjB,KAAGkB,cAAH,CAAkBF,IAAIG,IAAJ,CAASC,UAA3B,EAAuCJ,IAAIG,IAAJ,CAASE,MAAhD,EAAwDC,IAAxD,CAA6D;AAAA,WAAQL,IAAIM,IAAJ,CAASC,KAAKC,QAAL,EAAT,CAAR;AAAA,GAA7D;AACD,CAFD;;AAIAjB,IAAIO,IAAJ,CAAS,cAAT,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrCjB,KAAG0B,cAAH,CAAkBV,IAAIG,IAAJ,CAASC,UAA3B,EAAuCJ,IAAIG,IAAJ,CAASQ,KAAhD,EAAuDX,IAAIG,IAAJ,CAASS,IAAhE;AACDC,UAAQC,GAAR,CAAYd,IAAIG,IAAhB;AAEA,CAJD;;AAMAX,IAAIuB,GAAJ,CAAQ,QAAR,EAAkB,UAACf,GAAD,EAAMC,GAAN,EAAc;AAC9BjB,KAAGgC,SAAH,CAAa,EAAEC,MAAM,WAAR,EAAb,EAAoCX,IAApC,CAAyC,UAACE,IAAD,EAAU;AACjDP,QAAIM,IAAJ,CAAS,wBAASC,KAAK,CAAL,CAAT,CAAT;AACD,GAFD;AAGD,CAJD;;AAMAhB,IAAIuB,GAAJ,CAAQ,GAAR,EAAa,UAACf,GAAD,EAAMC,GAAN,EAAc;AAC1BA,MAAIM,IAAJ,CAAS,IAAT;AACA,CAFD;;AAIAf,IAAI0B,MAAJ,CAAWC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B,EAAqC,YAAM;AACzCR,UAAQC,GAAR,2BAAoCK,QAAQC,GAAR,CAAYC,IAAhD;AACD,CAFD;;;;;;;;gCA9CMjC,W;;gCAaAI,G","file":"app.js","sourcesContent":["/*\n * Steps\n 1. init\n 2. express\n 3. babel sudo npm i -g babel-cli\n 4. mongo\n tar -zxvf mongodb-osx-ssl-x86_64-3.4.5.tgz\n mkdir -p /Users/Juff/Documents/mongodb\n cp -R -n mongodb-osx-x86_64-3.4.5/ /Users/Juff/Documents/mongodb/\n export PATH=/Users/Juff/Documents/mongodb/bin:$PATH\n mkdir -p /Users/Juff/Documents/mongodb/data/db/\n mongod --dbpath /Users/Juff/Documents/mongodb/data/db/\n robomongo\n mongoose\n 5. body-parser\n\n */\n\n\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport * as db from './utils/dbutils';\nimport { serverPort } from './config/config.json';\nimport cors from 'cors';\nimport { sendStat } from './utils/sendStat';\nconst expressWinston = require('express-winston-2');\nconst winston = require('winston'); // for transports.Console\n\nconst corsOptions = {\n  origin: '*',\n  optionsSuccessStatus: 200, // some legacy browsers (IE11, various SmartTVs) choke on 204\n};\n\nimport createItems from './utils/createItems';\n\n// Connect to DB\ndb.connect();\ncreateItems(db);\n\n\n// Create and start server\nconst app = express();\napp.use(bodyParser.json());\napp.use(cors(corsOptions));\napp.use(expressWinston.errorLogger({\n    transports: [\n        new winston.transports.Console({\n            json: true,\n            colorize: true\n        })\n    ]\n}));\n\n\napp.post('/updateRate', (req, res) => {\n  db.updateItemRate(req.body.department, req.body.rating).then(data => res.send(data.toString()));\n});\n\napp.post('/sendComment', (req, res) => {\n  db.addItemComment(req.body.department, req.body.count, req.body.text);\n console.log(req.body);\n\n});\n\napp.get('/admin', (req, res) => {\n  db.listItems({ name: 'Secretary' }).then((data) => {\n    res.send(sendStat(data[0]));\n  });\n});\n\napp.get('/', (req, res) => {\n res.send('OK');\n});\n\napp.listen(process.env.PORT || 5000, () => {\n  console.log(`Server is running on ${process.env.PORT}`);\n});\n"]}